@page "/form"

@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json
@using System.Text.Json.Nodes
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using System.Threading.Tasks
@inject HttpClient Http

<div class="container-sm border mt-5">
    <p>@CurrentValueAsString</p>
    <form>
        <div class="d-flex justify-content-between p-3">
            <h3>Root</h3>
            <button @onclick="HandleSubmit" @onclick:preventDefault="true" class="btn btn-outline-success">
                Send
            </button>
        </div>
        <div class="input-group">
            <textarea type="text" class="form-control" rows="10" @bind="CurrentValueAsString" @bind:event="oninput" runat="server"></textarea>
        </div>
    </form>
</div>

@code {
    List<Item> MyPropertyFolder = new List<Item>();
    List<Item> MyValueFolder = new List<Item>();
    public string CurrentValueAsString { get; set; }
    private void HandleSubmit() { 
        var jsonText = CurrentValueAsString;
        using (var reader = new JsonTextReader(new StringReader(jsonText))) {
            while (reader.Read()) {
                if (reader.Value != null ) {
                    var property = new Item();
                    if (reader.TokenType.ToString() == "PropertyName") {
                        property.Name = reader.Value.ToString();
                        MyPropertyFolder.Add(property);
                    }
                    if (reader.TokenType.ToString() == "String") {
                        var value = new Item(property);
                        value.Name = reader.Value.ToString();
                        MyValueFolder.Add(value);
                    }
                } else {
                    Console.WriteLine("Token: {0}", reader.TokenType);
                }
            }
        }
        @* foreach (var item in MyPropertyFolder) {
            var json = JsonConvert.SerializeObject(item);
            var client = new HttpClient();
            var httpContent = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
            var response = await client.PostAsync("http://localhost:5135/api/items", httpContent);
            Console.WriteLine(response.StatusCode);
            if (response.IsSuccessStatusCode) {
                Console.WriteLine("Data posted");
            } 
        } *@
        @* foreach (var item in MyValueFolder) {
            var json = JsonConvert.SerializeObject(item);
            var client = new HttpClient();
            var httpContent = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
            var response = await client.PostAsync("http://localhost:5135/api/items", httpContent);
            Console.WriteLine(response.StatusCode);
            if (response.IsSuccessStatusCode) {
                Console.WriteLine("Data posted");
            } 
        } *@
    } 
}
